event.forEachRecipe({ type: 'alchemistry:dissolver'}, r => {

    console.info("MONKEY - OUTPUT OBJECT:")
        console.info("MONKEY - INPUT FLUID 1:")
        console.info( r.json.getAsJsonArray('inputs').get(0).get('tag').getAsString())
        var inputfluid_1 = r.json.getAsJsonArray('inputs').get(0).get('tag').getAsString().replace("forge","tconstruct")

        console.info(r.json.get('results').get('item').getAsString())
        var outputitem1 = r.json.get('results').get('item').getAsString() 
        var outputitem1_amount = r.json.get('results').get('count').getAsInt() 

});



onEvent("recipes", e => {
    e.custom({
        "type": "forge:conditional",
        "recipes": [
            {
                "conditions": [
                    {
                        "modid": "thermal",
                        "type": "forge:mod_loaded"
                    }
                ],
                "recipe": {
                    "type": "alchemistry:dissolver",
                    "group": "alchemistry:dissolver",
                    "input": {
                        "ingredient": {
                            "item": "thermal:rubber"
                        },
                        "count": 1
                    },
                    "output": {
                        "rolls": 1,
                        "weighted": false,
                        "groups": [
                            {
                                "probability": 33.3,
                                "results": [
                                    {
                                        "item": "chemlib:ethylene",
                                        "count": 2
                                    }
                                ]
                            },
                            {
                                "probability": 33.3,
                                "results": [
                                    {
                                        "item": "chemlib:carbon"
                                    }
                                ]
                            },
                            {
                                "probability": 33.4,
                                "results": [
                                    {
                                        "item": "minecraft:air"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        ]
    })


/*
{
    "duration": 20,
    "structureId": "mmtest:zappy_fh",
    "name": {
      "text": "Shocky Cocky"
    },
    "inputs": [
      {
        "type": "mm:simple",
        "ingredient": {
          "type": "mm:energy",
          "amount": 100000
        }
      }
    ],
    "outputs": [
      {
        "type": "mm:simple",
        "ingredient": {
          "type": "mm:energy",
          "amount": 50000
        }
      }
    ]
}
*/

})